{"remainingRequest":"/Users/kyy/Documents/ooad/酒店/hotel/front/node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!/Users/kyy/Documents/ooad/酒店/hotel/front/src/views/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kyy/Documents/ooad/酒店/hotel/front/src/views/register.vue","mtime":1668659412000},{"path":"/Users/kyy/Documents/ooad/酒店/hotel/front/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyy/Documents/ooad/酒店/hotel/front/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/kyy/Documents/ooad/酒店/hotel/front/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyy/Documents/ooad/酒店/hotel/front/node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  import copyright from \"@/components/copyright.vue\";\n  import store from './../store';\n  export default {\n    data() {\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          if (this.register.checkPass !== '') {\n            this.$refs.register.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.register.pass) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        register: {\n          username: '',\n          password: '',\n          confirm: '',\n          email: '',\n          phone: '',\n          gender: '',\n        },\n        iconstyle: 'el-icon-document-checked',\n        disabled: false,\n        btnType: 'primary',\n        isRealRegister: false,\n        rules: {\n          password: [{\n            validator: validatePass,\n            trigger: 'blur'\n          }],\n          confirm: [{\n            validator: validatePass2,\n            trigger: 'blur'\n          }],\n        }\n      }\n    },\n    components: {\n      copyright,\n    },\n    methods: {\n      resetForm(register) {\n        // console.log(this.$refs[register]);\n        this.$refs[register].resetFields();\n      },\n      registerBtnTest(register) {\n        // console.log(this.$refs[register].validate);\n        this.$refs[register].validate((valid) => {\n          if (valid) {\n            console.log(this.register);\n          } else {\n            console.log(\"err\");\n            return false;\n          }\n        })\n      },\n      registerBtn(register) {\n        this.$refs[register].validate((valid) => {\n          if (valid) {\n            this.iconstyle = \"el-icon-loading\";\n            this.disabled = true;\n            this.axios.post(\"http://localhost:8090/user/register\", {\n                \"email\": this.register.email,\n                \"userName\": this.register.username,\n                \"password\": this.register.password,\n                \"sex\": this.register.gender,\n                \"phone\": this.register.phone\n              })\n              .then(res => {\n                if (res.status == 200) {\n                  this.iconstyle = \"el-icon-check\";\n                  this.btnType = \"success\";\n                  setTimeout(() => {\n                    this.disabled = false;\n                    this.$router.push(\"/login\");\n                  }, 2000);\n                } else {\n                  this.iconstyle = \"el-icon-close\";\n                  this.btnType = \"danger\";\n                  setTimeout(() => {\n                    this.disabled = false;\n                    this.iconstyle = \"el-icon-document-checked\";\n                    this.btnType = \"primary\";\n                  }, 2000);\n                }\n              })\n              .catch(res => {\n                console.log(res);\n                this.iconstyle = \"el-icon-close\";\n                this.btnType = \"danger\";\n                setTimeout(() => {\n                  this.disabled = false;\n                  this.iconstyle = \"el-icon-document-checked\";\n                  this.btnType = \"primary\";\n                }, 2000);\n              })\n          } else {\n            console.log('error submit!!');\n            this.iconstyle = \"el-icon-close\";\n            this.btnType = \"danger\";\n            setTimeout(() => {\n              this.disabled = false;\n              this.iconstyle = \"el-icon-document-checked\";\n              this.btnType = \"primary\";\n            }, 2000);\n            return false;\n          }\n        });\n      },\n    }\n  }\n",{"version":3,"sources":["register.vue"],"names":[],"mappings":";AAkfile":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-container class=\"wrapper\">\n      <el-main class=\"section text-center\">\n        <div class=\"register-bg\"></div>\n        <el-card class=\"box-card register-card\">\n          <div class=\"text item\">\n            <p class=\"register-title\">账号注册</p>\n            <el-form :model=\"register\" status-icon ref=\"register\" label-width=\"80px\">\n              <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input type=\"text\" v-model=\"register.username\" suffix-icon=\"el-icon-user\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"password\">\n                <el-input type=\"password\" v-model=\"register.password\" suffix-icon=\"el-icon-lock\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认密码\" prop=\"confirm\">\n                <el-input type=\"password\" v-model=\"register.confirm\" suffix-icon=\"el-icon-lock\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"手机号码\" prop=\"phone\">\n                <el-input type=\"text\" v-model=\"register.phone\" suffix-icon=\"el-icon-mobile-phone\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"邮箱\" prop=\"confirm\">\n                <el-input type=\"email\" v-model=\"register.email\" suffix-icon=\"el-icon-message\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"性别\" prop=\"gender\">\n                <el-radio v-model=\"register.gender\" label=\"1\">男</el-radio>\n                <el-radio v-model=\"register.gender\" label=\"0\">女</el-radio>\n              </el-form-item>\n            </el-form>\n            <el-button :type=\"btnType\" @click=\"registerBtn('register')\" class=\"registerbtn\" :disabled=\"disabled\">\n              <i :class=\"iconstyle\"></i> 注册账号\n            </el-button>\n            <el-button @click=\"resetForm('register')\">重置</el-button>\n          </div>\n        </el-card>\n\n        <div class=\"register\">\n          <p>\n            <router-link to=\"/login\">已有账号？立即登录</router-link>\n          </p>\n        </div>\n      </el-main>\n    </el-container>\n    <el-footer class=\"footer text-center\">\n      <copyright></copyright>\n    </el-footer>\n  </div>\n</template>\n\n<script>\n  import copyright from \"@/components/copyright.vue\";\n  import store from './../store';\n  export default {\n    data() {\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          if (this.register.checkPass !== '') {\n            this.$refs.register.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.register.pass) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        register: {\n          username: '',\n          password: '',\n          confirm: '',\n          email: '',\n          phone: '',\n          gender: '',\n        },\n        iconstyle: 'el-icon-document-checked',\n        disabled: false,\n        btnType: 'primary',\n        isRealRegister: false,\n        rules: {\n          password: [{\n            validator: validatePass,\n            trigger: 'blur'\n          }],\n          confirm: [{\n            validator: validatePass2,\n            trigger: 'blur'\n          }],\n        }\n      }\n    },\n    components: {\n      copyright,\n    },\n    methods: {\n      resetForm(register) {\n        // console.log(this.$refs[register]);\n        this.$refs[register].resetFields();\n      },\n      registerBtnTest(register) {\n        // console.log(this.$refs[register].validate);\n        this.$refs[register].validate((valid) => {\n          if (valid) {\n            console.log(this.register);\n          } else {\n            console.log(\"err\");\n            return false;\n          }\n        })\n      },\n      registerBtn(register) {\n        this.$refs[register].validate((valid) => {\n          if (valid) {\n            this.iconstyle = \"el-icon-loading\";\n            this.disabled = true;\n            this.axios.post(\"http://localhost:8090/user/register\", {\n                \"email\": this.register.email,\n                \"userName\": this.register.username,\n                \"password\": this.register.password,\n                \"sex\": this.register.gender,\n                \"phone\": this.register.phone\n              })\n              .then(res => {\n                if (res.status == 200) {\n                  this.iconstyle = \"el-icon-check\";\n                  this.btnType = \"success\";\n                  setTimeout(() => {\n                    this.disabled = false;\n                    this.$router.push(\"/login\");\n                  }, 2000);\n                } else {\n                  this.iconstyle = \"el-icon-close\";\n                  this.btnType = \"danger\";\n                  setTimeout(() => {\n                    this.disabled = false;\n                    this.iconstyle = \"el-icon-document-checked\";\n                    this.btnType = \"primary\";\n                  }, 2000);\n                }\n              })\n              .catch(res => {\n                console.log(res);\n                this.iconstyle = \"el-icon-close\";\n                this.btnType = \"danger\";\n                setTimeout(() => {\n                  this.disabled = false;\n                  this.iconstyle = \"el-icon-document-checked\";\n                  this.btnType = \"primary\";\n                }, 2000);\n              })\n          } else {\n            console.log('error submit!!');\n            this.iconstyle = \"el-icon-close\";\n            this.btnType = \"danger\";\n            setTimeout(() => {\n              this.disabled = false;\n              this.iconstyle = \"el-icon-document-checked\";\n              this.btnType = \"primary\";\n            }, 2000);\n            return false;\n          }\n        });\n      },\n    }\n  }\n</script>\n\n<style scoped=\"scoped\">\n  .register-bg {\n    background: rgb(247, 160, 30);\n    height: 20vh;\n    background-size: 100%;\n    border: 0px solid transparent;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n  }\n\n  .text {\n    font-size: 14px;\n  }\n\n  .item {\n    /* padding: 18px 0; */\n  }\n\n  .register-card {\n    margin: -5rem 1rem 1rem 1rem;\n  }\n\n  .register-title {\n    font-size: 2rem;\n    font-weight: lighter;\n    margin-top: 1rem;\n  }\n\n  .wrapper {\n    min-height: 90vh;\n  }\n\n  .el-main {\n    max-height: 90vh;\n  }\n\n  #app {\n    overflow: hidden;\n  }\n\n  .registerbtn {\n    /* margin-top: 2rem; */\n  }\n\n  .register a,\n  .register div {\n    color: #409EFF;\n  }\n\n  .register p {\n    margin: 0.5rem;\n  }\n</style>\n"]}]}